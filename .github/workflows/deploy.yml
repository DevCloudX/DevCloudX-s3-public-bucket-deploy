name: Deploy Public S3 Bucket

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: "S3 Bucket Name"
        required: true
      aws_access_key:
        description: "AWS Access Key ID"
        required: true
      aws_secret_key:
        description: "AWS Secret Access Key"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_key }}
        run: |
          terraform plan -var="bucket_name=${{ github.event.inputs.bucket_name }}"

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_key }}
        run: |
          terraform apply -auto-approve -var="bucket_name=${{ github.event.inputs.bucket_name }}"

      - name: Install or update AWS CLI
        run: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install --update
            

      - name: Show S3 Bucket Details
        env:
          AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_key }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          echo "Bucket Location:"
          aws s3api get-bucket-location --bucket ${{ github.event.inputs.bucket_name }}

          echo "Bucket Policy:"
          aws s3api get-bucket-policy --bucket ${{ github.event.inputs.bucket_name }} || echo "No policy found"

          echo "Bucket ACL:"
          aws s3api get-bucket-acl --bucket ${{ github.event.inputs.bucket_name }}

          echo "Bucket Tags:"
          aws s3api get-bucket-tagging --bucket ${{ github.event.inputs.bucket_name }} || echo "No tags found"
